#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../',  __FILE__)

Dir.chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  puts "== Installing dependencies =="
  system "gem install bundler --conservative"
  system "bundle check || bundle install"

  puts "\n== Copying sample files =="
  unless File.exist?(APP_ROOT.join('config', 'database.yml'))
    FileUtils.cp APP_ROOT.join('config', 'database.yml.sample',), APP_ROOT.join('config', 'database.yml')
    system "vi config/database.yml"
  end

  unless File.exist?(APP_ROOT.join('.env'))
    FileUtils.cp APP_ROOT.join('.env.example',), APP_ROOT.join('.env')
  end

  unless File.exist?(APP_ROOT.join('.git', 'hooks', 'pre-push'))

    git_version = Gem::Version.new(`git --version`.gsub('git version', ''))
    if git_version > Gem::Version.new('1.8.2')
      puts "\n== Creating git pre-push hook"

      pre_hook = <<EOF
#!/bin/sh

branch=`git rev-parse --abbrev-ref HEAD`
exit_code=$(bin/rspec --fail-fast --out /dev/null --format progress > /dev/null 2>/dev/null )$?
if [ $exit_code -gt 0 ]; then
  echo "Did not push $branch because of failing tests"
fi
exit $exit_code
EOF

      File.open(APP_ROOT.join('.git', 'hooks', 'pre-push'), 'w+') do |file|
        file.write(pre_hook)
      end

      FileUtils.chmod('+x', APP_ROOT.join('.git', 'hooks', 'pre-push'))
    end
  end

  puts "\n== Preparing database =="
  system "bin/rake db:setup"

  puts "\n== Removing old logs and tempfiles =="
  system "rm -f log/*"
  system "rm -rf tmp/cache"

  puts "\n== Restarting application server =="
  system "touch tmp/restart.txt"
end
